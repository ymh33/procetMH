package com.oracle.samil.Acontroller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.function.Function;
import java.util.stream.Collectors;

import org.apache.ibatis.annotations.ResultMap;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.oracle.samil.Amodel.Emp;
import com.oracle.samil.Amodel.EmpSalDept;
import com.oracle.samil.Amodel.Sal;
import com.oracle.samil.MhService.Paging;
import com.oracle.samil.MhService.SalService;

import lombok.RequiredArgsConstructor;

@Controller
@RequiredArgsConstructor
@RequestMapping(value="/mh")
public class MhSalController {
	private final SalService ss;
		
		@GetMapping(value = "/sal_join")
		public String sal_join (){
			System.out.println("mh sal_join play~");
			return "mh/sal_join";
		}

		@GetMapping(value = "/admin_sal_set")
		public String empList (EmpSalDept EmpSalDept, Model model){
			int totalSal =  ss.totalSal();
			String currentPage = "1";
			
			Paging page = new Paging(totalSal, EmpSalDept.getCurrentPage());
			EmpSalDept.setStart(page.getStart());
			EmpSalDept.setEnd(page.getEnd());


			System.out.println("Sal->" + totalSal);
			List<EmpSalDept> listEmp = ss.totalEmp(EmpSalDept);
			model.addAttribute("totalSal", totalSal);
			model.addAttribute("listEmp", listEmp);
			model.addAttribute("page", page);
			
			return "mh/admin_sal_set";
			
		}
		@ResponseBody
	    @GetMapping("/getDeptName")
		  public ResponseEntity<Map<String, EmpSalDept>> getDeptName(@RequestParam("empno") int empno) {
			EmpSalDept EmpSalDept = new EmpSalDept();
			EmpSalDept.setEmpno(empno);
			EmpSalDept shemp = ss.shemp(EmpSalDept);
			Map<String, EmpSalDept> response = new HashMap<>();
			response.put("response", shemp);
			
	        return ResponseEntity.ok(response); 
		}
		
		@ResponseBody
		@GetMapping("/loadEmployeeData")
		public ResponseEntity<Map<String, Object>> getEmployeeList(@RequestParam("currentPage") int currentPage) {
			int totalCount = ss.totalSal();
			int pageBlock = 10;
			int totalPage = (int)Math.ceil((double)totalCount/pageBlock);
			EmpSalDept EmpSalDept = new EmpSalDept();
			List<EmpSalDept> listemp = ss.setTotalEmp(EmpSalDept);
			System.out.println("listemp->"+listemp);
			Paging page = new Paging(currentPage, totalPage, pageBlock);
			Map<String, Object> resultMap = new HashMap<>();
			resultMap.put("listEmp", listemp);
			resultMap.put("page", page);
			return new ResponseEntity<>(resultMap, HttpStatus.OK);
		}

	
		
		@GetMapping(value = "/admin_sal_give")
		public String sal_give (){
			System.out.println("mh admin_sal_give play~");
			return "mh/admin_sal_give";
		}
		
		@GetMapping(value = "/admin_sal_list")
		public String sal_list (){
			System.out.println("mh admin_sal_list play~");
			return "mh/admin_sal_list";
		}

	
}
